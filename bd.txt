1) Listar a matrícula, o nome e CPF do empregado e o nome e a data de
nascimento dos dependentes desses empregados, para os empregados que tiveram
data de admissão entre 2012 e 2020 e dependentes do sexo masculino (utilizar
between e cláusula extract):
SELECT 
  EMP.idEmprg,
  EMP.nomEmprg,
  EMP.numCPFEmprg,
  DPD.nomDepend,
  DPD.datNascDepend
FROM Empregado EMP
JOIN Dependente DPD ON EMP.idEmprg = DPD.idEmprg
WHERE DPD.indSexoDepend = 'M'
  AND EXTRACT(YEAR FROM EMP.datAdmsEmprg) BETWEEN 2012 AND 2020;

2) Listar a matrícula e nomes dos empregados, o nome e a quantidade de horas dos
projetos cuja localização seja no Espírito Santo, Piauí ou São Paulo e que tenha
entre 30 e 80 horas de projeto. Ordenar em ordem crescente de horas de projeto.
Utilizar cláusula like para a localização:





SELECT
  e.idEmprg,
  e.nomEmprg,
  p.dscProj,
  ep.qtdHorasEmprProj
FROM Empregado e
JOIN EmprProjeto ep ON e.idEmprg = ep.idEmprg
JOIN Projeto p ON ep.idProj = p.idProj
JOIN Localizacao l ON p.idLocal = l.idLocal
WHERE (
    l.dscLocal LIKE '%Espírito Santo%' OR
    l.dscLocal LIKE '%Piauí%' OR
    l.dscLocal LIKE '%São Paulo%'
  )
  AND ep.qtdHorasEmprProj BETWEEN 30 AND 80
ORDER BY ep.qtdHorasEmprProj ASC;






3) Listar a quantidade de dependentes por empregado, mostrando o id, nome e
salário, para os empregados que tem mais de um dependente. Utilizar group by,
having e função agregada count(*):


SELECT
  EMP.IdEmprg,
  EMP.nomEmprg,
  EMP.valSalEmprg,
  COUNT(DPD.IdDepend) AS qtdDependente
FROM Empregado EMP
JOIN Dependente DPD ON EMP.IdEmprg = DPD.IdEmprg
GROUP BY EMP.IdEmprg, EMP.nomEmprg, EMP.valSalEmprg
HAVING COUNT(DPD.IdDepend) > 1;

4) Listar os empregados que não tem nenhum dependente (utilizar cláusula
exists/not exists):




SELECT *
FROM Empregado EMP
WHERE NOT EXISTS (
  SELECT 1
  FROM Dependente DPD
  WHERE DPD.idEmprg = EMP.idEmprg
);



 5) Listar os empregados (id, nome e data de admissão) cujos nomes tem as sílabas
na, ne ou no (utilizar expressão regular):


SELECT
  IdEmprg,
  nomEmprg,
  datAdmsEmprg
FROM Empregado
WHERE nomEmprg REGEXP 'na|ne|no';

6) Fazer uma consulta para mostrar o id e nome dos supervisores que trabalham no
departamento de Contabilidade ou Custos (autorelacionamento):



SELECT DISTINCT
  S.IdEmprg AS Matricula_Supervisor,
  S.nomEmprg AS Nome_Supervisor
FROM Empregado E
JOIN Empregado S ON E.IdSupervisor = S.IdEmprg
JOIN Departamento D ON S.IdDepto = D.IdDepto
WHERE D.nomDepto IN ('Contabilidade', 'Custos');

